#!/usr/bin/env bash

USAGE="$0 [-i stepnum:file,...] notebook-file title\n
\t- the -i (insert) option specifies a comma separated list
\t  of stepnum:file pairs, causing the contents of the specified
\t  files be inserted before the corresponding step numbers.
\t- notebook file should end with the .ipynb extension
\t- title must be quoted if it contains whitespace
\t- example: $0 test-notebook.ipynb \"This is a test\"
\nDependencies:
\t- jupyter (https://jupyter.org/install)
\t- claat (https://github.com/googlecodelabs/tools)
"

if [[ ! (("$1" = "-i" && "$#" == 4) || ("$#" == 2)) ]]
then
    echo "ERROR: invalid number of arguments"
    echo -e "$USAGE"
    exit 1
fi

insert_list=""
if [ "$1" = "-i" ]
then
    insert_list=(${2//,/ })
    shift; shift
fi

sorted=()
while IFS= read -rd '' item; do
    sorted+=("$item")
done < <(printf '%s\0' "${insert_list[@]}" | sort -z)

for i in ${sorted[@]}
do
    if [[ !($i == *":"*) ]]
    then
        echo "ERROR: missing colon in -i option"
        echo -e "$USAGE"
        exit 1
    fi
    stepnum=$(echo $i | cut -d: -f1)
    re='^[0-9]+$'
    if ! [[ $stepnum =~ $re ]] ; then
        echo "ERROR: -i option stepnum $stepnum not a number"
        echo -e "$USAGE"
        exit 1
    fi
    file=$(echo $i | cut -d: -f2)
    if [ ! -r $file ]
    then
        echo "ERROR: -i option file $file not readable"
        echo -e "$USAGE"
        exit 1
    fi
    echo $stepnum:$file
done

NB=$1
TITLE=$2
if [ ! -r $NB ]
then
    echo "ERROR: notebook file $NB not readable"
    echo -e "$USAGE"
    exit 1
fi

NAME=$(basename $1 .ipynb)
MD=$NAME.md
HTML=$NAME.html

jupyter nbconvert --to markdown $NB
cat <<! >warning
"""
WARNING: DO NOT EDIT THIS FILE.
This codelab was auto-generated by a tool that converts Jupyter ipynb
files to Google Codelab markdown. If you want to modify this codelab,
update the single source of truth (the .ipynb file), not this file.
"""
!
cat warning $MD >$MD.tmp
mv $MD.tmp $MD
rm -f warning
sed -i -e "1s/^/Id: $TITLE\n/" $MD
echo 0 >count
mv $MD $MD.tmp1
for i in ${sorted[@]}
do
    stepnum=$(echo $i | cut -d: -f1)
    file=$(echo $i | cut -d: -f2)
    awk -v file="$file" -v stepnum="$stepnum" -v count=$(cat count) \
        '/^## / || /^##$/ {x++} x==(stepnum+count) {system("echo " count+1 " >count");system("cat " file);print("\n");x++} {print}' $MD.tmp1 >$MD.tmp2
    mv $MD.tmp2 $MD.tmp1
done
rm -f count
mv $MD.tmp1 $MD
claat export -o - $MD >$HTML

echo -e "markdown version: $MD\nhtml version:     $HTML"
